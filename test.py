# -*- coding: utf-8 -*-
"""Test.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gSgJNrHwSEjkVb7bsT-jIK1KmUXwUcPd
"""

# Commented out IPython magic to ensure Python compatibility.
git clone https://github.com/roboflow-ai/YOLOX.git
# %cd YOLOX
pip3 install -U pip && pip3 install -r requirements.txt
pip3 install -v -e .
pip uninstall -y torch torchvision torchaudio
# May need to change in the future if Colab no longer uses CUDA 11.0
pip install torch==1.8.0+cu111 torchvision==0.9.0+cu111 torchaudio==0.8.0 -f https://download.pytorch.org/whl/torch_stable.html

nvidia-smi

# Commented out IPython magic to ensure Python compatibility.
cd /content/
git clone https://github.com/NVIDIA/apex
# %cd apex
pip install -v --disable-pip-version-check --no-cache-dir --global-option="--cpp_ext" --global-option="--cuda_ext" ./

pip3 install cython; pip3 install 'git+https://github.com/cocodataset/cocoapi.git#subdirectory=PythonAPI'

#to get your roboflow code below please follow the link output by this cell
pip -q install roboflow
from roboflow import Roboflow
rf = Roboflow(model_format="voc", notebook="yolox")

pip install roboflow

from roboflow import Roboflow
rf = Roboflow(api_key="HefUQER2Tk6vq7ACvhT8")
project = rf.workspace("jjj-dvcpa").project("cells-66dha")
dataset = project.version(8).download("voc")

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/YOLOX/
ln -s {dataset.location}/train/ ./datasets/VOCdevkit

# Commented out IPython magic to ensure Python compatibility.
# %mkdir "/content/YOLOX/datasets/VOCdevkit/VOC2007"
python3 voc_txt.py "/content/YOLOX/datasets/VOCdevkit/"
# %mkdir "/content/YOLOX/datasets/VOCdevkit/VOC2012"
cp -r "/content/YOLOX/datasets/VOCdevkit/VOC2007/." "/content/YOLOX/datasets/VOCdevkit/VOC2012"

from IPython.core.magic import register_line_cell_magic

@register_line_cell_magic
def writetemplate(line, cell):
    with open(line, 'w') as f:
        f.write(cell.format(**globals()))

# Commented out IPython magic to ensure Python compatibility.
# ##REPLACE this cell with your classnames stripped of whitespace and lowercase
# %%writetemplate /content/YOLOX/yolox/data/datasets/voc_classes.py
# 
# VOC_CLASSES = (
#   "yadro",
#   "jir",
#   "protok",
# )

# Commented out IPython magic to ensure Python compatibility.
# ##REPLACE this cell with your classnames stripped of whitespace and lowercase
# %%writetemplate /content/YOLOX/yolox/data/datasets/coco_classes.py
# 
# COCO_CLASSES = (
#   "yadro",
#   "jir",
#   "protok",
# )

NUM_CLASSES = 3
sed -i -e 's/self.num_classes = 20/self.num_classes = {NUM_CLASSES}/g' "/content/YOLOX/exps/example/yolox_voc/yolox_voc_s.py"

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/
wget https://github.com/Megvii-BaseDetection/storage/releases/download/0.0.1/yolox_s.pth
# %cd /content/YOLOX/

python /content/YOLOX/tools/train.py -f /content/YOLOX/exps/example/yolox_voc/yolox_voc_s.py -d 1 -b 16 --fp16 -o -c /content/yolox_s.pth

MODEL_PATH = "/content/YOLOX/YOLOX_outputs/yolox_voc_s/best_ckpt.pth.tar"
python3 tools/eval.py -n  yolox-s -c {MODEL_PATH} -b 64 -d 1 --conf 0.001 -f exps/example/yolox_voc/yolox_voc_s.py

TEST_IMAGE_PATH = "/content/6.1.18..jpg"
python tools/demo.py image -f /content/YOLOX/exps/example/yolox_voc/yolox_voc_s.py -c {MODEL_PATH} --path {TEST_IMAGE_PATH} --conf 0.4 --nms 0.45 --tsize 640 --save_result --device gpu